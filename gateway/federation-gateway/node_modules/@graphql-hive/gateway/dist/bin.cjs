'use strict';

require('dotenv/config');
var module$1 = require('node:module');
var cli = require('./cli-zNcDKN5C.cjs');
require('node:cluster');
require('node:os');
require('node:path');
require('@commander-js/extra-typings');
require('@graphql-yoga/render-graphiql');
require('@graphql-mesh/utils');
require('@graphql-hive/gateway-runtime');
require('@graphql-hive/pubsub');
require('node:fs/promises');
require('node:url');
require('node:fs');
require('node:http');
require('node:https');
require('@graphql-tools/utils');
require('@graphql-tools/code-file-loader');
require('@graphql-tools/graphql-file-loader');
require('@graphql-tools/load');

var _documentCurrentScript = typeof document !== 'undefined' ? document.currentScript : null;
function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var module__default = /*#__PURE__*/_interopDefault(module$1);

module__default.default.register("@graphql-hive/importer/hooks", {
  parentURL: (
    // @ts-ignore bob will complain when bundling for cjs
    (typeof document === 'undefined' ? require('u' + 'rl').pathToFileURL(__filename).href : (_documentCurrentScript && _documentCurrentScript.tagName.toUpperCase() === 'SCRIPT' && _documentCurrentScript.src || new URL('bin.cjs', document.baseURI).href))
  ),
  data: {
    packedDepsPath: globalThis.__PACKED_DEPS_PATH__ || ""
  }
});
cli.enableModuleCachingIfPossible();
cli.handleNodeWarnings();
const log = cli.getDefaultLogger();
cli.run({ log }).catch((err) => {
  log.error(err);
  process.exit(1);
});
